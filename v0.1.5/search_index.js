var documenterSearchIndex = {"docs":
[{"location":"#SpineModel.jl-Documentation-1","page":"SpineModel.jl Documentation","title":"SpineModel.jl Documentation","text":"","category":"section"},{"location":"#","page":"SpineModel.jl Documentation","title":"SpineModel.jl Documentation","text":"Documentation for SpineModel.jl.","category":"page"},{"location":"#Contents-1","page":"SpineModel.jl Documentation","title":"Contents","text":"","category":"section"},{"location":"#","page":"SpineModel.jl Documentation","title":"SpineModel.jl Documentation","text":"Depth = 3","category":"page"},{"location":"#Index-1","page":"SpineModel.jl Documentation","title":"Index","text":"","category":"section"},{"location":"#","page":"SpineModel.jl Documentation","title":"SpineModel.jl Documentation","text":"","category":"page"},{"location":"#Public-interface-1","page":"SpineModel.jl Documentation","title":"Public interface","text":"","category":"section"},{"location":"#","page":"SpineModel.jl Documentation","title":"SpineModel.jl Documentation","text":"run_spinemodel(::String, ::String)\r\nrun_spinemodel(::String)","category":"page"},{"location":"#SpineModel.run_spinemodel-Tuple{String,String}","page":"SpineModel.jl Documentation","title":"SpineModel.run_spinemodel","text":"run_spinemodel(\n    url_in, url_out;\n    optimizer=Cbc.Optimizer,\n    cleanup=true,\n    extend=m->nothing,\n    result=\"\"\n)\n\nRun the Spine model from url_in and write results to url_out. At least url_in must point to valid Spine database. A new Spine database is created at url_out if it doesn't exist.\n\nOptional keyword arguments\n\noptimizer is the constructor of the optimizer used for building and solving the model.\n\ncleanup tells run_spinemodel whether or not convenience function callables should be set to nothing after completion.\n\nextend is a function for extending the model. run_spinemodel calls this function with the internal JuMP.Model object before calling JuMP.optimize!.\n\nresult is the name of the result object to write to url_out when saving results.\n\n\n\n\n\n","category":"method"},{"location":"#SpineModel.run_spinemodel-Tuple{String}","page":"SpineModel.jl Documentation","title":"SpineModel.run_spinemodel","text":"run_spinemodel(\n    url;\n    optimizer=Cbc.Optimizer,\n    cleanup=true,\n    extend=m->nothing,\n    result=\"\"\n)\n\nRun the Spine model from url and write results to the same url. Keyword arguments have the same purpose as for run_spinemodel(::String, ::String).\n\n\n\n\n\n","category":"method"},{"location":"#Internals-1","page":"SpineModel.jl Documentation","title":"Internals","text":"","category":"section"},{"location":"#","page":"SpineModel.jl Documentation","title":"SpineModel.jl Documentation","text":"TODO","category":"page"}]
}
